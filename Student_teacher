-- Slip 16

-- Tables
CREATE TABLE Student (
    sno INT PRIMARY KEY,
    s_name VARCHAR(50),
    s_class VARCHAR(2) CHECK (s_class IN ('FY','SY','TY'))
);

CREATE TABLE Teacher (
    tno INT PRIMARY KEY,
    t_name VARCHAR(50),
    yrs_experience INT
);

-- Junction table for M-M relationship with descriptive attribute Subject
CREATE TABLE Student_Teacher (
    sno INT REFERENCES Student(sno),
    tno INT REFERENCES Teacher(tno),
    subject VARCHAR(50),
    PRIMARY KEY(sno, tno, subject)
);

-- Sample Data
INSERT INTO Student VALUES
(101,'Rohit','FY'),
(102,'Sita','SY'),
(103,'Amit','TY'),
(104,'Neha','SY');

INSERT INTO Teacher VALUES
(1,'Pawar',15),
(2,'Sharma',8),
(3,'Kale',4);

INSERT INTO Student_Teacher VALUES
(101,1,'Maths'),
(102,1,'Data Structure'),
(103,2,'Maths'),
(104,2,'Data Structure'),
(102,3,'DBMS');

-- Queries B (any 3)
-- i List teachers who have more than 5 years of experience
SELECT t_name FROM Teacher WHERE yrs_experience>5;

-- ii Count all students who have taken subject "Data Structure"
SELECT COUNT(DISTINCT sno) FROM Student_Teacher WHERE subject='Data Structure';

-- iii List the names of all students from SY Class
SELECT s_name FROM Student WHERE s_class='SY';

-- iv Change experience of teacher named "Pawar" to 20
UPDATE Teacher SET yrs_experience=20 WHERE t_name='Pawar';

-- v Display classwise details of students
SELECT s_class, COUNT(*) AS student_count FROM Student GROUP BY s_class;

-- Query C
-- List the names of all teachers with their subjects along with the student names
SELECT t.t_name, st.subject, s.s_name
FROM Teacher t
JOIN Student_Teacher st ON t.tno=st.tno
JOIN Student s ON s.sno=st.sno;

-- OR alternative C (view: teacher teaching maximum number of subjects)
CREATE VIEW Teacher_MaxSubjects AS
SELECT t.t_name, COUNT(DISTINCT st.subject) AS num_subjects
FROM Teacher t
JOIN Student_Teacher st ON t.tno=st.tno
GROUP BY t.t_name
ORDER BY num_subjects DESC
LIMIT 1;
