ðŸ“˜ Slip 1

Tables:

CREATE TABLE Room (
    roomno INT PRIMARY KEY,
    room_name VARCHAR(50),
    room_type VARCHAR(10) CHECK (room_type IN ('AC','NonAC')),
    charges NUMERIC(10,2)
);

CREATE TABLE Guest (
    guestcode INT PRIMARY KEY,
    gname VARCHAR(50),
    city VARCHAR(50),
    roomno INT UNIQUE REFERENCES Room(roomno)
);

-- Sample Data
INSERT INTO Room VALUES
(101,'Deluxe','AC',8000),
(102,'Standard','NonAC',6000),
(103,'Suite','AC',12000);

INSERT INTO Guest VALUES
(1,'Rahul Sharma','Pune',101),
(2,'Neha Joshi','Mumbai',102),
(3,'Anil Deshmukh','Nashik',103);


Queries (B):

-- i
SELECT * FROM Room WHERE charges BETWEEN 5000 AND 10000;

-- ii
SELECT gname, city FROM Guest ORDER BY city;

-- iii
SELECT MIN(charges) FROM Room;

-- iv
UPDATE Room SET charges = charges*1.15 WHERE room_type='AC';

-- v
SELECT room_name FROM Room WHERE room_type='NonAC' AND charges>10000;


C (Guest with costliest room):

SELECT g.gname
FROM Guest g JOIN Room r ON g.roomno=r.roomno
WHERE r.charges=(SELECT MAX(charges) FROM Room);

ðŸ“˜ Slip 2

Tables:

CREATE TABLE Department (
    dno INT PRIMARY KEY,
    dname VARCHAR(50),
    location VARCHAR(50)
);

CREATE TABLE Employee (
    eno INT PRIMARY KEY,
    ename VARCHAR(50),
    designation VARCHAR(50),
    salary NUMERIC(10,2),
    dno INT REFERENCES Department(dno)
);

-- Sample Data
INSERT INTO Department VALUES
(10,'HR','Nashik'),
(20,'Finance','Pune'),
(30,'IT','Delhi');

INSERT INTO Employee VALUES
(1,'Anita','Manager',60000,10),
(2,'Ravi','Clerk',25000,20),
(3,'Meena','Analyst',40000,30);


Queries (B):

-- i
UPDATE Employee SET salary=salary*1.05;

-- ii
SELECT AVG(salary) FROM Employee;

-- iii
SELECT * FROM Department WHERE location='Nashik';

-- iv
SELECT * FROM Employee WHERE ename LIKE '%a';

-- v
SELECT location FROM Department WHERE dname='HR';


C (Employees not in Delhi depts):

SELECT * FROM Employee
WHERE dno NOT IN (SELECT dno FROM Department WHERE location='Delhi');

ðŸ“˜ Slip 3

Tables:

CREATE TABLE Area (
    aname VARCHAR(50) PRIMARY KEY,
    area_type VARCHAR(10) CHECK (area_type IN ('urban','rural')),
    pincode INT
);

CREATE TABLE Person (
    pnumber INT PRIMARY KEY,
    pname VARCHAR(50),
    birthdate DATE,
    income NUMERIC(10,2),
    aname VARCHAR(50) REFERENCES Area(aname)
);

-- Sample Data
INSERT INTO Area VALUES
('Camp','urban',411001),
('Kalyaninagar','urban',411014),
('VillageX','rural',422003);

INSERT INTO Person VALUES
(1,'Ramesh','1995-07-12',30000,'Camp'),
(2,'Ravi','2000-07-05',15000,'Kalyaninagar'),
(3,'Sita','1988-01-25',18000,'VillageX');


Queries (B):

-- i
SELECT * FROM Person WHERE pname LIKE 'R%';

-- ii
SELECT pname FROM Person WHERE EXTRACT(MONTH FROM birthdate)=7;

-- iii
SELECT * FROM Person ORDER BY income;

-- iv
SELECT COUNT(*) FROM Area WHERE area_type='urban';

-- v
UPDATE Area SET pincode=411036 WHERE aname='Kalyaninagar';


C (People in Camp with less income than someone in Kalyaninagar):

SELECT pname
FROM Person
WHERE aname='Camp' AND income < ANY
     (SELECT income FROM Person WHERE aname='Kalyaninagar');

ðŸ“˜ Slip 4

Tables:

CREATE TABLE Policy (
    pno INT PRIMARY KEY,
    pname VARCHAR(50),
    premium_amt NUMERIC(10,2),
    policy_type VARCHAR(20) CHECK (policy_type IN ('Yearly','Half-yearly','Monthly'))
);

CREATE TABLE Customer (
    cno INT PRIMARY KEY,
    cname VARCHAR(50),
    city VARCHAR(50),
    agent_name VARCHAR(50),
    pno INT REFERENCES Policy(pno)
);

-- Sample Data
INSERT INTO Policy VALUES
(1,'Jeevan Anand',5000,'Yearly'),
(2,'Money Back',2000,'Monthly');

INSERT INTO Customer VALUES
(1,'Amit','Pune','Mr.Kale',1),
(2,'Suresh','Mumbai','Mr.Joshi',2),
(3,'Meena','Nashik','Mrs.Rao',1);


Queries (B):

-- i
SELECT * FROM Customer WHERE city='Mumbai';

-- ii
SELECT AVG(premium_amt) FROM Policy;

-- iii
SELECT COUNT(*) FROM Customer c JOIN Policy p ON c.pno=p.pno
WHERE p.pname='Jeevan Anand';

-- iv
UPDATE Policy SET premium_amt=premium_amt*1.10 WHERE policy_type='Monthly';

-- v
SELECT policy_type, COUNT(*) FROM Policy GROUP BY policy_type;


C (Policy type with highest avg premium):

SELECT policy_type
FROM Policy
GROUP BY policy_type
ORDER BY AVG(premium_amt) DESC
LIMIT 1;

ðŸ“˜ Slip 5

Tables:

CREATE TABLE Doctor (
    dno INT PRIMARY KEY,
    dname VARCHAR(50),
    city VARCHAR(50)
);

CREATE TABLE Patient (
    pno INT PRIMARY KEY,
    pat_name VARCHAR(50),
    city VARCHAR(50),
    disease VARCHAR(50)
);

-- Junction table for M-M with Fees
CREATE TABLE Doctor_Patient (
    dno INT REFERENCES Doctor(dno),
    pno INT REFERENCES Patient(pno),
    fees NUMERIC(10,2),
    PRIMARY KEY (dno,pno)
);

-- Sample Data
INSERT INTO Doctor VALUES
(1,'Dr. Patil','Nagpur'),
(2,'Dr. Kumar','Pune');

INSERT INTO Patient VALUES
(10,'Anita','Nagpur','Cancer'),
(11,'Ajay','Pune','Asthama'),
(12,'Arun','Mumbai','Fever');

INSERT INTO Doctor_Patient VALUES
(1,10,500),
(2,11,200),
(2,12,300);


Queries (B):

-- i
SELECT * FROM Doctor WHERE city='Nagpur';

-- ii
SELECT COUNT(*) FROM Patient;

-- iii
SELECT pat_name FROM Patient WHERE disease='Cancer';

-- iv
UPDATE Doctor SET city='Pune' WHERE dname='Dr. Patil';

-- v
SELECT pat_name FROM Patient WHERE pat_name LIKE 'A%';


C (Patients with Asthama & fee=200 by Dr.Kumar):

SELECT COUNT(*) 
FROM Patient p
JOIN Doctor_Patient dp ON p.pno=dp.pno
JOIN Doctor d ON d.dno=dp.dno
WHERE p.disease='Asthama' AND dp.fees=200 AND d.dname='Dr. Kumar';
